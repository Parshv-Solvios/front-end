import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useEffect, useState } from "react";
import * as RegistrationCodeAPI from "@/services/registrationcode";
import * as CommunicationAPI from "@/services/communication";


export default function Home() {

  const [Status, setStatus] = useState('');
  const [RegistrationCode, setRegistrationCode] = useState('');
  const [ServiceDetails, setServiceDetails] = useState({
    DisplayName: '',
    State: '',
    Status: '',
  });

  const GetStatus = async () => {
    document.getElementById('loading').style.display = 'block';
    try {
      const data = await ipcRenderer.invoke('GetServiceDetails');

      if (data.raw) {
        const servicedata = JSON.parse(data.raw);
        console.log(data.raw);
        setServiceDetails({ DisplayName: servicedata.DisplayName, State: servicedata.State, Status: servicedata.Status });
      }
      else {
        setServiceDetails({ DisplayName: 'Not Found', State: 'Not Found', Status: 'Not Found' });
      }
    }
    catch (e) {
      console.log(e);
      //document.getElementById('loading').style.display = 'none';
    }


    await RegistrationCodeAPI.GetStatus().then(res => {
      setStatus(res.data.message);
      document.getElementById('loading').style.display = 'none';
    }).catch(err => {
      document.getElementById('loading').style.display = 'none';
    });
  };

  const StopService = async () => {
    const data = await CommunicationAPI.StopService();
    console.log(data);
    await GetStatus();
  };
  const StartService = async () => {
    const data = await CommunicationAPI.StartService();
    console.log(data);
    await GetStatus();
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await RegistrationCodeAPI.Register(RegistrationCode).then(async (res) => {
        if(res.data.isSuccess)
          await RegistrationCodeAPI.RestartServer();
        else
          alert(res.data.message);
      });
    } catch (e) {

    }

    setTimeout(async () => {
      await GetStatus();
    }, 3000);

  };


  useEffect(() => {
    (async () => {
      await GetStatus();
    })();

    return () => { };
  }, []);

  return (
    <>
      <Head>
        <title>Botiga</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="loading" id="loading">Loading&#8230;</div>
      <form onSubmit={handleSubmit}>
        <div className="container">

          <h1 className="text-center">Service Status</h1>
          <br />
          <table style={{ width: '100%' }}>
            <tr>
              <th>DisplayName</th>
              <th>State</th>
              <th>Status</th>
            </tr>
            <tr>
              <td style={{ textAlign: 'center' }}>{ServiceDetails.DisplayName}</td>
              <td style={{ textAlign: 'center' }}>{ServiceDetails.State}</td>
              <td style={{ textAlign: 'center' }}>{ServiceDetails.Status}</td>
            </tr>
          </table>

          <div style={{ display: 'flex' }}>

            <button type="button" id="submitButton"
              onClick={() => StartService()}
              className="registerbtn">Start</button>

            <button type="button" id="submitButton"
              onClick={() => StopService()}
              style={{ background: 'red' }} className="registerbtn">Stop</button>

          </div>

          <button type="button" id="submitButton" onClick={async () => {
            await GetStatus();
          }} className="registerbtn">Refresh</button>
          <br />
          <hr />

          {ServiceDetails.State === 'Running' && (<>
            <h1 className="text-center">Registration</h1>

            <input
              type="text"
              onChange={(e) => {
                setRegistrationCode(e.target.value)
              }}
              name="regCode" value={RegistrationCode}
              placeholder="Ex : 6B29FC40-CA47-1067-B31D-00DD010662DA " id="registration-code" required />

            <button type="submit" id="submitButton" className="registerbtn">Submit</button>
            <p>
              <span id="errorResponse" style={{ color: 'red' }}>

              </span>
            </p>
            <p>
              Current Status:
              <span id="status" className={"badge badge--small " + (Status === 'Registred' ? 'badge--success' : 'badge--danger')}>
                {Status}
              </span>
            </p>
          </>)}
        </div>
      </form>
    </>
  );
}
